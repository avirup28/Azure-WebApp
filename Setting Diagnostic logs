Import-csv <path> |%{$webAppLogResource = Get-AzureRmResource -ResourceGroupName $_.RG  -ResourceType Microsoft.Web/sites/config -ResourceName $_.N -ApiVersion 2018-02-01
$propertyObject = $webAppLogResource.Properties

$propertyObject.applicationLogs.azureBlobStorage.level = "Verbose"
$propertyObject.applicationLogs.azureBlobStorage.sasUrl = "<URL"
$propertyObject.applicationLogs.azureBlobStorage.retentionInDays = 30
$propertyObject.httpLogs.fileSystem.enabled = $false                
$propertyObject.httpLogs.azureBlobStorage.sasUrl = "<URL>"
$propertyObject.httpLogs.azureBlobStorage.retentionInDays = 30
$propertyObject.httpLogs.azureBlobStorage.enabled = $true
$propertyObject.failedRequestsTracing.enabled = $true
$propertyObject.detailedErrorMessages.enabled = $true

Set-AzureRmResource -PropertyObject $propertyObject -ResourceGroupName $_.RG -ResourceType Microsoft.Web/sites/config -ResourceName $_.N -ApiVersion 2015-08-01 -Force }



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 

$Conn = Get-AutomationConnection -Name AzureRunAsConnection
Add-AzureRMAccount -ServicePrincipal -Tenant $Conn.TenantID `
-ApplicationID $Conn.ApplicationID -CertificateThumbprint $Conn.CertificateThumbprint
 

$WebApps = Get-AzureRmWebApp | select Name , ResourceGroup

foreach ($WebApp in $WebApps) {

$Wname = $WebApp.Name
$Wgroup = $Webapp.ResourceGroup


$webAppLogResource = Get-AzureRmResource -ResourceGroupName $Wgroup -ResourceType Microsoft.Web/sites/config -ResourceName $Wname/logs -ApiVersion 2018-02-01
$propertyObject = $webAppLogResource.Properties



if ($propertyObject.applicationLogs.azureBlobStorage.level -ne "Verbose")                 { $propertyObject.applicationLogs.azureBlobStorage.level ="Verbose" }


 if ($propertyObject.applicationLogs.azureBlobStorage.sasUrl -ne "https://allwebapplogsna.blob.core.windows.net/az-na-cs-webapp-logs?sp=rwl&st=2018-12-01T12:55:27Z&se=2020-12-02T12:55:00Z&sv=2017-11-09&sig=7f6St9DpCly%2BA1pRD7zo1eT6B7RYJvbRuGqmqqZuPaE%3D&sr=c") { $propertyObject.applicationLogs.azureBlobStorage.sasUrl = "https://allwebapplogsna.blob.core.windows.net/az-na-cs-webapp-logs?sp=rwl&st=2018-12-01T12:55:27Z&se=2020-12-02T12:55:00Z&sv=2017-11-09&sig=7f6St9DpCly%2BA1pRD7zo1eT6B7RYJvbRuGqmqqZuPaE%3D&sr=c"}

                 
 if ($propertyObject.applicationLogs.azureBlobStorage.retentionInDays -ne 365)              { $propertyObject.applicationLogs.azureBlobStorage.retentionInDays = 365 }

                 
 if ($propertyObject.httpLogs.fileSystem.enabled -ne $false)                               { $propertyObject.httpLogs.fileSystem.enabled = $false }  

                        
 if ($propertyObject.httpLogs.azureBlobStorage.sasUrl -ne "https://allwebapplogsna.blob.core.windows.net/az-na-cs-webapp-logs?sp=rwl&st=2018-12-01T12:55:27Z&se=2020-12-02T12:55:00Z&sv=2017-11-09&sig=7f6St9DpCly%2BA1pRD7zo1eT6B7RYJvbRuGqmqqZuPaE%3D&sr=c")       { $propertyObject.httpLogs.azureBlobStorage.sasUrl = "https://allwebapplogsna.blob.core.windows.net/az-na-cs-webapp-logs?sp=rwl&st=2018-12-01T12:55:27Z&se=2020-12-02T12:55:00Z&sv=2017-11-09&sig=7f6St9DpCly%2BA1pRD7zo1eT6B7RYJvbRuGqmqqZuPaE%3D&sr=c" }

                  
 if ($propertyObject.httpLogs.azureBlobStorage.retentionInDays -ne 365)                     { $propertyObject.httpLogs.azureBlobStorage.retentionInDays = 365 }

                  
 if ($propertyObject.httpLogs.azureBlobStorage.enabled -ne $true)                          { $propertyObject.httpLogs.azureBlobStorage.enabled = $true }

                  
 if ($propertyObject.failedRequestsTracing.enabled -ne $true)                              { $propertyObject.failedRequestsTracing.enabled = $true }

                  
 if ($propertyObject.detailedErrorMessages.enabled -ne $true)                              { $propertyObject.detailedErrorMessages.enabled = $true }
	
	    Set-AzureRmResource -PropertyObject $propertyObject -ResourceGroupName $Wgroup  -ResourceType Microsoft.Web/sites/config `
				 -ResourceName $Wname/logs -ApiVersion 2018-02-01 -Force
    }






<#

   I have run the above script as my requirement was different, I already had all the values so I edited the exisiting script like this.
   The core script from where I took this Idea is posted by MSFT in the below URL
   https://blogs.msdn.microsoft.com/akashkhandelwal/2018/06/25/azure-app-services-setting-diagnostic-logs-in-azure-webapps-using-powershell/
   
#>
